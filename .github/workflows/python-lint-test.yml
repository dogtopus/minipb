name: Lint and Run Test Suite

on: [push]

env:
  MPY_STDLIB_COMMIT: f6723531802661e5a1fd3d63d3b7b68c38f40cd2

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout the code'
      uses: actions/checkout@v3
    - name: Set up Python.
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-mpy:
    runs-on: ubuntu-latest
    container:
      image: docker.io/micropython/unix:v1.19
    steps:
    - name: 'Setup basic environment.'
      run: apt-get update && apt-get install -y git
    - name: 'Checkout the code'
      uses: actions/checkout@v3
    - name: 'Download MicroPython stdlib.'
      run: |
        git clone https://github.com/micropython/micropython-lib.git /tmp/micropython-lib && \
        bash -c 'cd /tmp/micropython-lib && git checkout '"${MPY_STDLIB_COMMIT}"'' && \
        cp /tmp/micropython-lib/python-stdlib/bisect/bisect.py ./ && \
        cp /tmp/micropython-lib/python-stdlib/logging/logging.py ./ && \
        cp -r /tmp/micropython-lib/python-stdlib/unittest/unittest ./ && \
        rm -rf /tmp/micropython-lib
    - name: Run test suite
      run: |
        micropython test.py

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
    - name: 'Checkout the code'
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run test suite
      run: |
        python test.py
